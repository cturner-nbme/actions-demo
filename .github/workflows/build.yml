# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

#     - name: Publish to GitHub Packages Apache Maven
#       run: mvn deploy
#       env:
#         GITHUB_TOKEN: ${{ github.token }}
        
    - name: Maven Release and Publish
      # You may pin to the exact commit or the version.
      # uses: mg-smartrent/github-actions-maven-release@5f387c0d77b22da293e9812d43ab90cdc49f475a
      uses: mg-smartrent/github-actions-maven-release@v1.5
      with:
        # Maven server repository id to push the artefacts to
        maven-repo-server-id: 'github'
        # Maven server repository username
        maven-repo-server-username: 'cturner-nbme'
        # Maven server repository password
        maven-repo-server-password: ${{ github.token }}
        # The git user name for commiting the release
        git-release-bot-name: cturner-nbme
        # The git user email for commiting the release
        git-release-bot-email: cturner@nbme.org
        # Github access token. https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line
        access-token: ${{ github.token }}
